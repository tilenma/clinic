<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <http auto-config="true" use-expressions="true" >
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/customer/*" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC','ROLE_OPA')" />
        <intercept-url pattern="/customer/create**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC','ROLE_OPA')" />
        <intercept-url pattern="/customer/latest**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC','ROLE_OPA')" />
		<intercept-url pattern="/case**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/case/create**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/case/edit**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/case/medicine**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />        
        <intercept-url pattern="/case/attach**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/case/viewAttach**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/case/deleteAttach**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/case/doUpload**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/weekOfCase**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/report/*" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC','ROLE_OPA')" /> 
        <intercept-url pattern="/report/latest**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC','ROLE_OPA')" /> 
        <intercept-url pattern="/report2/latest**" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC','ROLE_OPA')" /> 
        <intercept-url pattern="/access*" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />
        <intercept-url pattern="/medicine/new**" access="hasAnyRole('ROLE_ADMIN')" />
        <intercept-url pattern="/medicine*" access="hasAnyRole('ROLE_ADMIN')" />
        <intercept-url pattern="/stat/case*" access="hasAnyRole('ROLE_ADMIN')" />
        <intercept-url pattern="/stat/medic*" access="hasAnyRole('ROLE_ADMIN')" />
        <intercept-url pattern="/stat/gender*" access="hasAnyRole('ROLE_ADMIN')" />
        <intercept-url pattern="/stat/effect*" access="hasAnyRole('ROLE_ADMIN','ROLE_DOC')" />  
        
        <form-login login-page="/login"
          default-target-url="/"
          username-parameter="username"
          password-parameter="password"          
          authentication-failure-url="/login?error" />
        <access-denied-handler error-page="/accessDenied" />
        <csrf/>
        
        <!-- allow iframe from same domain -->
        <headers>
		<frame-options policy="SAMEORIGIN" />
		</headers>
    </http>
  
    <authentication-manager >
        <authentication-provider>
<!-- 
        	<password-encoder hash="bcrypt" />
-->
        	<jdbc-user-service data-source-ref="cloudDataSource"
		  	users-by-username-query="select username,password, enabled from users where username=?"
		  authorities-by-username-query="select username, role from user_roles where username =?" />	  
        </authentication-provider>
    </authentication-manager>
    
	<beans:bean id="cloudDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" ref="driverName" />
		<beans:property name="url" ref="jdbcURL" />
		<beans:property name="username" ref="userName" />
		<beans:property name="password" ref="password" />
	</beans:bean>	

	<beans:bean id="jdbcURL"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<beans:property name="targetObject">
			<beans:bean class="com.clinic.web.util.DatabaseUtil" />
		</beans:property>
		<beans:property name="targetMethod">
			<beans:value>getJdbcUrl2</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="userName"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<beans:property name="targetObject">
			<beans:bean class="com.clinic.web.util.DatabaseUtil" />
		</beans:property>
		<beans:property name="targetMethod">
			<beans:value>getUserName2</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="password"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<beans:property name="targetObject">
			<beans:bean class="com.clinic.web.util.DatabaseUtil" />
		</beans:property>
		<beans:property name="targetMethod">
			<beans:value>getPassword2</beans:value>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="driverName" class="java.lang.String" factory-method="valueOf">
		<beans:constructor-arg value="org.postgresql.Driver" />
	</beans:bean>				
</beans:beans>